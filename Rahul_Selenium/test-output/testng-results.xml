<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="653" started-at="2018-09-23T05:32:51Z" finished-at="2018-09-23T05:32:51Z">
    <groups>
      <group name="smoke">
        <method signature="TC002_CreateLead.CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="CreateLead" class="testcase.TC002_CreateLead"/>
      </group> <!-- smoke -->
    </groups>
    <test name="Test" duration-ms="653" started-at="2018-09-23T05:32:51Z" finished-at="2018-09-23T05:32:51Z">
      <class name="testcase.TC002_CreateLead">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="beforeSuite" is-config="true" duration-ms="262" started-at="2018-09-23T05:32:51Z" finished-at="2018-09-23T05:32:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setData()[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="setData" is-config="true" duration-ms="1" started-at="2018-09-23T05:32:51Z" finished-at="2018-09-23T05:32:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="beforeClass" is-config="true" duration-ms="24" started-at="2018-09-23T05:32:51Z" finished-at="2018-09-23T05:32:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="CreateLead" duration-ms="0" started-at="2018-09-23T05:32:51Z" data-provider="fetchData" finished-at="2018-09-23T05:32:51Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:49)
at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:131)
at org.testng.internal.Parameters.handleParameters(Parameters.java:706)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:923)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1077)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:395)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:347)
at utils.ReadExcel.getExcelData(ReadExcel.java:32)
at wdMethods.ProjectMethods.fetchData(ProjectMethods.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:74)
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:45)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateLead -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcase.TC002_CreateLead@3108bc]" name="afterSuite" is-config="true" duration-ms="397" started-at="2018-09-23T05:32:52Z" finished-at="2018-09-23T05:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcase.TC002_CreateLead -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
